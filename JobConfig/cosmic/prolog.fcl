#
#
#
BEGIN_PROLOG

crvOuterBox: {
  type: union
  pars:
  [
    # Upstream plane
    { type: plane normal: [  0, 0, -1 ] point : [ 0, 0, -3400 ] },
    # Downstream plane
    { type: plane normal: [  0, 0, 1 ] point : [ 0, 0, 19800 ] },
    # +x plane
    { type: plane normal: [  1, 0, 0 ] point : [ 1500, 0, 0 ] },
    # -x plane (outside of cryo box)
    { type: plane normal: [  -1, 0, 0 ] point : [ -8200, 0, 0 ] },
    # +y plane
    { type: plane normal: [  0, 1, 0 ] point : [ 0, 4000, 0 ] },
    # -y plane
    { type: plane normal: [  0, -1, 0 ] point : [ 0, -2100, 0 ] }
  ]
}

crvInnerBox: {
  type: intersection
  pars:
  [
    # Upstream plane
    { type: plane normal: [  0, 0, 1 ] point : [ 0, 0, -2200 ] },
    # Downstream plane
    { type: plane normal: [  0, 0, -1 ] point : [ 0, 0, 18500 ] },
    # +x plane
    { type: plane normal: [  -1, 0, 0 ] point : [ -1500, 0, 0 ] },
    # -x plane
    { type: plane normal: [  1, 0, 0 ] point : [ -6300, 0, 0 ] },
    # +y plane
    { type: plane normal: [  0, -1, 0 ] point : [ 0, 2500, 0 ] },
    # -y plane
    { type: plane normal: [  0, 1, 0 ] point : [ 0, -2100, 0 ] }
  ]
}

crvStage1End: {
  type: inVolume
  pars: [DSOuterCryoShell, DSInnerCryoShell, DSUpEndWallShell, TS5OuterCryoShell, TS5CryoInsVac, TS5Vacuum, Coll51, DS1Vacuum, DS2Vacuum, DS3Vacuum]
  write: crvStage1
}

cosmicKineticEnergyCutS1: {
  type: union
  pars:
  [
    {
      type: intersection
      pars:
      [
        { type: union pars: [ @local::crvOuterBox, @local::crvInnerBox ] },
        { type: kineticEnergy cut: 10.0 },
        { type: pdgId pars: [ 22, 2112 ] }
      ]
    },
    {
      # 5 MeV can only make a hit in 1 CRV layer
      type: intersection
      pars:
      [
        { type: union pars: [ @local::crvOuterBox, @local::crvInnerBox ] },
        { type: kineticEnergy cut: 5.0 },
        { type: pdgId pars: [ 2212, 11, -11 ] }
      ]
    }
  ]
}

cosmicKineticEnergyCutS2: {
  # Kill lower momentum particles outside of the CRV box
  type: intersection
  pars:
  [
    { type: intersection pars: [
        { type: kineticEnergy cut: 80.0 },
        { type: pdgId pars: [ 22, 11, -11, 2112 ] }]},
    { type: union pars: [ @local::crvOuterBox ] }
  ]
}

Cosmic: {
  CORSIKA : {
    source : {
      module_type: FromCorsikaBinary
      # example file only, should be overwritten downstream
      fileNames: ["/pnfs/mu2e/persistent/users/srsoleti/corsika/sim.srsoleti.corsika.v1.30001.csk"]
      runNumber          : 1205
      showerAreaExtension  : 10000
      projectToTargetBox : true
      targetBoxXmin: -10000
      targetBoxXmax: 3000
      targetBoxYmin: -5000
      targetBoxYmax: 5000
      targetBoxZmin: -5000
      targetBoxZmax: 21000
      fluxConstant: 1.8e4
    }
    generate: {
      module_type  : CORSIKAEventGenerator
      corsikaModuleLabel: "FromCorsikaBinary"
      refPointChoice: "UNDEFINED"
      projectToTargetBox : true
      targetBoxYmax : 5000
      intDist: -1
    }
  }
  # generator truncation filter; only needed for cosmic rays in principle
  g4status: {
    module_type: FilterStatusG4
    input: "g4run"
    maxAcceptedStatus: 9  #  status 10 and above means StepPointMCCollection may have non-dereferencable pointers
  }
  compressPV : {
    module_type: CompressPhysicalVolumes
    volumesInput : "g4run"
    hitInputs : []
    particleInputs : [ "cosmicFilter" ]
  }
  stepPointMomentumFilter: {
    module_type: FilterStepPointMomentum
    inputs : [ "g4run:crvStage1" ]
    cutMomentumMin: 0. # Filter all particles that hit DS region
  }
  S1LowFilter : {
    module_type: FilterCosmicsStage1
    inputs : [ "g4run:CRV" ]
    cutEDepMax: 16  # Filter events that deposit lower than 16 MeV in CRV
    DSStepPointMCs : "g4run:crvStage1" # only sum energy deposits earlier than the earliest DS entrance
  }
  cosmicFilter: {
  module_type: FilterG4Out
  mainHitInputs : [ "g4run:crvStage1", "g4run:CRV" ]
  extraHitInputs : []               #stores only StepPoints of tracks which also have StepPoints in the mainHitInputs
    mcTrajectoryInputs : [ "g4run" ]
    vetoDaughters: []
  }
  cosmicTimeOffset: {
    module_type: CosmicTimeOffset
    intervalStart: 0
    intervalEnd: 100005
  }
  CosmicResampler: {
    module_type: ResamplingMixer
    fileNames: @nil
    readMode: "sequential"
    wrapFiles: true
    mu2e: {
      writeEventIDs : true
      MaxEventsToSkip: 0
      products: {
        genParticleMixer: { mixingMap: [ [ "generate", "" ] ] }
        simParticleMixer: { mixingMap: [ [ "cosmicFilter", ""] ] }
        mcTrajectoryMixer:{ mixingMap: [ [ "cosmicFilter", ""] ] }
        stepPointMCMixer: { mixingMap: [ [ "cosmicFilter:crvStage1", ":" ], [ "cosmicFilter:CRV", ":" ] ] }
        volumeInfoMixer: {
          evtOutInstanceName: "eventlevel"
          srInput: "compressPV"
        }
        simTimeOffset : "cosmicTimeOffset"
        cosmicLivetimeMixer: {
          moduleLabel: "generate"
          genCounterLabel: "genCounter::Primary"
        }
      }
    }
  }
  generateCRY: {
    module_type: CRYEventGenerator
    inputFile    : "Offline/EventGenerator/defaultConfigs/defaultCRYconfig.txt"
  }
  Mu2eG4CommonCutCosmicS2:{
    type: union
    pars:
    [
      @local::cosmicKineticEnergyCutS2,
      {
        type: inVolume
        pars: [ worldDirtBottom ]
      }
    ]
  }
  S2Inputs: {
    primaryType: StepPoints
    primaryTag: "CosmicResampler:crvStage1"
    inputMCTrajectories: "CosmicResampler"
    simStageOverride: 1
    inputPhysVolumeMultiInfo: "CosmicResampler"
        updateEventLevelVolumeInfos : {
      input: "CosmicResampler:eventlevel"
      outInstance: "eventlevel"
    }
  }
  Mu2eG4CommonCutCosmicS1: {
    type: union
    pars:
    [
      @local::cosmicKineticEnergyCutS1,
      @local::crvStage1End,
      {
        type: inVolume
        pars: [ worldDirtBottom ]
      }
    ]
  }
  Mu2eG4CommonCutCosmicNoField: {
    type: union
    pars:
    [
      @local::cosmicKineticEnergyCutS1,
      {
        type: inVolume
        pars: [ worldDirtBottom ]
      }
    ]
  }

  S2KeptProducts : [
    "keep mu2e::CosmicLivetime_*_mixed_*",
    "keep mu2e::StepPointMCs_CosmicResampler_crvStage1_*",
    "keep mu2e::StepPointMCs_CosmicResampler_CRV_*"
  ]

  S1KeptProducts : [
    "keep art::TriggerResults_*_*_*",
    "keep mu2e::StatusG4_*_*_*",
    "keep mu2e::CosmicLivetime_*_*_*",
    "keep *_compressPV_*_*",
    "keep mu2e::GenParticles_*_*_*",
    "keep *_cosmicFilter_*_*"
  ]

}
END_PROLOG

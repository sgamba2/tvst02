#
# split the Beam stream into muon and 'electrons' (everything else, but mostly electrons)
# This is run during POT job output concatenation
#
#include "Offline/fcl/minimalMessageService.fcl"
process_name: beamsplitter
source: { module_type: RootInput }
services: { message: @local::default_message }
physics: {
  filters : {
    muonSelector: {
      module_type: ParticleCodeFilter
      SimParticles : BeamFilter
      PrintLevel : 0
      ParticleCodes : [ [13, "uninitialized", "mu2eKillerVolume" ], # mu-, * , Manually stopped
        [-13, "uninitialized" , "mu2eKillerVolume" ] ] # mu+, *,  Manually stopped
    }
  }
  selectMuons : [muonSelector ]
  trigger_paths : [ selectMuons ]
  outpath: [muonout, electronout ]
  end_paths: [outpath]
}
outputs: {
  muonout: {
    module_type: RootOutput
    fileName : "sim.owner.MuBeamCat.version.sequencer.art"
    outputCommands:   [ "keep *_*_*_*" ]
    SelectEvents: [selectMuons]
  }
  electronout: {
    module_type: RootOutput
    fileName : "sim.owner.EleBeamCat.version.sequencer.art"
    outputCommands:   [ "keep *_*_*_*" ]
    RejectEvents: [selectMuons]
  }
}

